package lambda;

public class Ex1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*
		 * 람다식(Lambda Expressions)
		 * - 자바 8에 추가된 가장 큰 특징
		 * - "함수형" 프로그래밍 형태를 받아들인 결과
		 * 
		 * 함수형 프로그램이란? (함수형 vs 객체지향)
		 * - 함수형 : 1950년대, 객체지향 : 1990년대 (역사가 더 오래되었음)
		 * - 기능 위주의 프로그래밍 기법
		 * - 매개변수만을 사용하여 만드는 함수(순수 함수, pure function) 를
		 * 	구현하고 호출함으로써 외부 자료에 부수적인 영향을 주지 않도록 구현하는 방식
		 * - 객체 지향 : 객체를 기반으로 구현, 클래스에 속성과 기능을 정의
		 * 	함수형 : 함수를 기반으로 자료를 입력받아 구현, 기능 즉 함수가 따로 존재
		 * 
		 * - 함수 이름이 없는 익명 함수를 만드는 것
		 * 	메서드의 이름과 리턴타입을 빼고 '->' 를 활용하여 람다식을 구현
		 * 	ex) public int add(int x, int y) {
		 * 			return x + y;
		 * 		}
		 * 		의 메서드를 람다식으로 표현하면
		 * 		(int x, int y) -> { return x + y; }
		 * 
		 * < 람다식의 기본 문법 >
		 * (데이터타입 매개변수, ...) -> { 실행문, ... }
		 * 
		 * 1. 기본형
		 * (int x) -> { System.out.println(x); }
		 * 
		 * 2. 매개변수의 타입을 추론할 수 있는 경우에는 타입 생략 가능
		 * 
		 */
	}

}
